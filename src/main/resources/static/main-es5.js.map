{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/attemptquiz/attemptquiz.component.html","src/app/createquiz/createquiz.component.html","src/app/login/login.component.html","src/app/signup/signup.component.html","src/app/user/user.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/attemptquiz/attemptquiz.component.css","src/app/attemptquiz/attemptquiz.component.ts","src/app/createquiz/createquiz.component.css","src/app/createquiz/createquiz.component.ts","src/app/login/login.component.css","src/app/login/login.component.ts","src/app/services/anthentication.service.ts","src/app/services/quiz.service.ts","src/app/services/user.service.ts","src/app/signup/signup.component.css","src/app/signup/signup.component.ts","src/app/user/user.component.css","src/app/user/user.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<nav class=\\\"navbar navbar-expand-sm navbar-dark text-light navbar_top\\\">\\n  <h2>\\n    <a class=\\\"nav-link text-light\\\" routerLink=\\\"quiz\\\" (click)=\\\"quiz()\\\">\\n    <i class=\\\"material-icons \\\" >\\n      school\\n    </i> QUIZ </a>\\n  </h2>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent1\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse \\\" id=\\\"navbarSupportedContent1\\\">\\n    <ul class=\\\"navbar-nav  ml-auto bg-dark\\\">\\n      <li class=\\\"nav-item active\\\" *ngIf=\\\"this.authService.loggedIn\\\">\\n        <i class=\\\"material-icons other_icon\\\">person </i> {{this.authService.username}}\\n      </li>\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"login\\\" *ngIf=\\\"this.authService.loggedIn\\\" (click)=\\\"logout()\\\">Logout</a>\\n      </li>\\n\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"login\\\" *ngIf=\\\"!this.authService.loggedIn\\\">Login</a>\\n      </li>\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"signup\\\" *ngIf=\\\"!this.authService.loggedIn\\\">Signup</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n<router-outlet></router-outlet>\\n\\n\\n\\n\"","export default \"\\n <div class=\\\"alert-danger sticky-top float-right\\\">\\n    <countdown [config]=\\\"{leftTime: 1200, demand: false}\\\" (event)=\\\"timesUp($event)\\\">$!m!:$!s!</countdown>\\n</div>\\n<div class=\\\"mt-5 container card\\\" *ngIf=\\\"!completed\\\">\\n   <h4>Questions</h4>\\n    <form questionTest=\\\"ngForm\\\" novalidate>\\n        <div *ngFor=\\\"let ques of questionlist; let i=index\\\">\\n            <div>{{i+1}}.{{ques.question}}</div>\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-9 col-form-label\\\">\\n                        <div class=\\\"form-check form-check-inline mr-1\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"{{ques.id}}\\\" value=\\\"a\\\"\\n                                [(ngModel)]=\\\"ques.selected\\\">\\n                            <label class=\\\"form-check-label\\\">a. {{ques.a}} </label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline mr-1 float-right\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"{{ques.id}}\\\" value=\\\"b\\\"\\n                                [(ngModel)]=\\\"ques.selected\\\">\\n                            <label class=\\\"form-check-label\\\">b. {{ques.b}}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-9 col-form-label\\\">\\n                        <div class=\\\"form-check form-check-inline mr-1\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"{{ques.id}}\\\" value=\\\"c\\\"\\n                                [(ngModel)]=\\\"ques.selected\\\">\\n                            <label class=\\\"form-check-label\\\">c. {{ques.c}}</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline mr-1 float-right\\\">\\n                            <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"{{ques.id}}\\\" value=\\\"d\\\"\\n                                [(ngModel)]=\\\"ques.selected\\\">\\n                            <label class=\\\"form-check-label\\\">d. {{ques.d}}</label>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary my-3\\\" (click)=\\\"submitTest()\\\">Submit</button>\\n</div>\\n<div class=\\\"mt-5 container card\\\" *ngIf=\\\"completed\\\">\\n    <h3>Results\\n        <div class=\\\"modal-body text-center\\\" >\\n        <h4>\\n            Total Questions: {{questionlist.length}} </h4>\\n        <h4 style=\\\"color: darkblue\\\">\\n            Total Answered: {{totalAnswered}}\\n        </h4>\\n        <h4 style=\\\"color: green;\\\">\\n            Right Answer : {{rightAnswer}}\\n        </h4>\\n        </div>\\n\\n    </h3>\\n    <div class=\\\"modal-body text-center\\\" >\\n        <div *ngFor=\\\"let ques of questionlist; let i=index\\\"\\n            [style.color]=\\\"!ques.selected? '#ffc107' : ques.selected == ques.answer ? 'green': 'red'\\\">\\n            <div>{{i+1}}.{{ques.question}}.{{ques.selected}}</div>\\n            <div>Your Answer: {{ques.selected}}. {{ques[ques.selected]}}</div>\\n            <div>Right Answer: {{ques.answer}}. {{ques[ques.answer]}}</div>\\n            <hr>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"row pb-5 px-0 py-0 mx-0\\\">\\n    <div class=\\\"col-xs-11 mt-5 ml-5 mr-5 mb-5 mx-auto\\\">\\n\\n        <div class=\\\"mt-5 shadow\\\">\\n            <div class=\\\"alert-danger col-12 px-auto py-5\\\" *ngIf=\\\"createErrorMessage\\\">\\n                QuizName already exists!!\\n            </div>\\n        </div>\\n\\n        <div class=\\\"mt-5 shadow\\\" *ngIf=\\\"newQuizAdded\\\">\\n            <div class=\\\"alert-success col-12 px-auto py-5\\\">\\n                QuizName sucessfully added!!\\n            </div>\\n        </div>\\n\\n\\n        <div class=\\\" mt-5 \\\" *ngIf=\\\"!newQuizAdded\\\">\\n            <form [formGroup]=\\\"createQuizForm\\\" (submit)=\\\"createQuiz(createQuizForm.value)\\\">\\n                <div class=\\\"row mt-5 ml-5 mr-5\\\">\\n                    <div class=\\\"col-12 \\\">\\n                        <label for=\\\"quizname\\\" class=\\\"mr-2\\\">QuizName </label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your quizname\\\"\\n                            formControlName=\\\"quizname\\\" id=\\\"quizname\\\"\\n                            [class.is-invalid]=\\\"quizname.invalid && quizname.touched\\\">\\n                        <div *ngIf=\\\"quizname.errors\\\">\\n                            <small class=\\\"text text-danger\\\"\\n                                *ngIf=\\\"quizname.invalid && quizname.errors.required && quizname.touched\\\">\\n                                School name required</small>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div formArrayName=\\\"arr\\\" *ngFor=\\\"let a of createQuizForm.get('arr').controls; let i = index\\\">\\n                    <div [formGroupName]=\\\"i\\\" style=\\\"margin-bottom: 10px;\\\">\\n                        <div class=\\\"row mt-5 ml-5 mr-5\\\">\\n                            <div class=\\\"col-12 \\\">\\n                                <label for=\\\"question\\\" class=\\\"mr-2\\\">Question </label>{{i+1}}\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your question\\\"\\n                                    formControlName=\\\"question\\\" id=\\\"question\\\">\\n                                <div *ngIf=\\\"a.controls.question.errors\\\">\\n                                    <small class=\\\"text text-danger\\\"\\n                                        *ngIf=\\\"a.controls.question.errors.required && a.controls.question.touched\\\">question\\n                                        is required</small>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row ml-5 mr-5\\\">\\n                            <div class=\\\"col-md-6 col-xs-12 mt-1\\\">\\n                                <label for=\\\"a\\\">first option</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter First option\\\"\\n                                    formControlName=\\\"a\\\" id=\\\"a\\\">\\n                                <div *ngIf=\\\"a.controls.a.errors\\\">\\n                                    <small class=\\\"text text-danger\\\"\\n                                        *ngIf=\\\"a.controls.a.errors.required && a.controls.a.touched\\\">option is\\n                                        required</small>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-6 col-xs-12  mt-1\\\">\\n                                <label for=\\\"b\\\">Second option</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Second option\\\"\\n                                    formControlName=\\\"b\\\" id=\\\"b\\\">\\n                                <div *ngIf=\\\"a.controls.b.errors\\\">\\n                                    <small class=\\\"text text-danger\\\"\\n                                        *ngIf=\\\"a.controls.b.errors.required && a.controls.b.touched\\\">Second\\n                                        option is required</small>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row ml-5 mr-5\\\">\\n                            <div class=\\\"col-md-6 col-xs-12 mt-1\\\">\\n                                <label for=\\\"c\\\">Third option</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Third option\\\"\\n                                    formControlName=\\\"c\\\" id=\\\"c\\\">\\n                                <div *ngIf=\\\"a.controls.c.errors\\\">\\n                                    <small class=\\\"text text-danger\\\"\\n                                        *ngIf=\\\"a.controls.c.errors.required && a.controls.c.touched\\\">Third\\n                                        option is required</small>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-6 col-xs-12  mt-1\\\">\\n                                <label for=\\\"d\\\">Fourth option</label>\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Fourth option\\\"\\n                                    formControlName=\\\"d\\\" id=\\\"d\\\">\\n                                <div *ngIf=\\\"a.controls.d.errors\\\">\\n                                    <small class=\\\"text text-danger\\\"\\n                                        *ngIf=\\\"a.controls.d.errors.required && a.controls.d.touched\\\">Fourth\\n                                        option is required</small>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"row ml-5 mr-5\\\">\\n                            <div class=\\\"col-lg-12 mt-1\\\">\\n                                <label class=\\\"col-md-12 label-font\\\">Choose Correct Answer Option\\n                                    <span style=\\\"color:red;\\\" [hidden]=\\\"!(answer?.invalid)\\\">*</span>\\n                                </label>\\n                                <div class=\\\"col-md-12\\\">\\n                                    <div class=\\\"form-check form-check-inline mr-2\\\">\\n                                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"a\\\" formControlName=\\\"answer\\\" required>\\n                                        <label class=\\\"form-check-label\\\">a.</label>\\n                                    </div>\\n                                    <div class=\\\"form-check form-check-inline mr-2\\\">\\n                                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"b\\\" formControlName=\\\"answer\\\" required>\\n                                        <label class=\\\"form-check-label\\\">b.</label>\\n                                    </div>\\n                                    <div class=\\\"form-check form-check-inline mr-2\\\">\\n                                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"c\\\" formControlName=\\\"answer\\\" required>\\n                                        <label class=\\\"form-check-label\\\">c.</label>\\n                                    </div>\\n                                    <div class=\\\"form-check form-check-inline mr-2\\\">\\n                                        <input class=\\\"form-check-input\\\" type=\\\"radio\\\" name=\\\"answer\\\" value=\\\"d\\\" formControlName=\\\"answer\\\" required>\\n                                        <label class=\\\"form-check-label\\\">d.</label>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n\\n                        <div class=\\\"row mt-5 ml-5 mr-5 mb-5\\\">\\n                            <div class=\\\"col-12\\\">\\n                                <button type=\\\"button\\\" (click)=\\\"addItem()\\\"\\n                                    class=\\\"btn buttonColor text-light \\\">Add</button>\\n\\n                                <button type=\\\"submit\\\" class=\\\"btn buttonColor text-light ml-5\\\"\\n                                    [disabled]=\\\"!createQuizForm.valid\\\">Submit</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"row pb-5\\\">\\n    <div class=\\\"col-xs-11 mt-5 ml-5 mr-5 mb-5 mx-auto\\\">\\n        <div class=\\\"card mt-5 shadow\\\">\\n            <h1 class=\\\"mt-5 ml-5\\\">Login</h1>\\n\\n\\n            <div class=\\\"alert alert-danger ml-5 mr-5\\\" *ngIf=\\\"this.authService.isLoggedInValid\\\">Invalid Username /\\n                Password</div>\\n            <form [formGroup]=\\\"loginForm\\\" (submit)=\\\"this.authService.authenticateUser(loginForm.value)\\\">\\n                <div class=\\\"row mt-5 ml-5 mr-5\\\">\\n                    <div class=\\\"col-12\\\">\\n                        <label for=\\\"username\\\">Username</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Username\\\" formControlName=\\\"username\\\"\\n                            id=\\\"username\\\" required>\\n                        <div class=\\\"text-danger\\\"\\n                            *ngIf=\\\"username.touched && username.invalid && username.errors.required\\\">Username is\\n                            required</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row ml-5 mr-5\\\">\\n                    <div class=\\\"col-12 mt-5\\\">\\n                        <label for=\\\"password\\\">Password</label>\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Password\\\"\\n                            formControlName=\\\"password\\\" id=\\\"password\\\" required>\\n                        <div class=\\\"text-danger\\\"\\n                            *ngIf=\\\"password.touched && password.invalid && password.errors.required\\\">Password is\\n                            required</div>\\n                    </div>\\n                </div>\\n\\n\\n\\n                <div class=\\\"row ml-5 mr-5\\\">\\n                    <div class=\\\"col-12 mt-5\\\">\\n                        <label for=\\\"userType\\\">User Type</label>\\n                        <select id=\\\"userType\\\" formControlName=\\\"userType\\\" class=\\\"custom-select\\\"\\n                            [class.is-invalid]=\\\"changeType || (userType.touched && userType.pristine)\\\"\\n                            (change)=\\\"changeUserType($event)\\\">\\n\\n                            <option *ngFor=\\\"let type of cate\\\" [ngValue]=\\\"type\\\">{{type}}</option>\\n                        </select>\\n                        <small class=\\\"text text-danger\\\"\\n                            [class.d-none]=\\\"!changeType  && (userType.untouched || userType.dirty)\\\">User type is\\n                            required</small>\\n                    </div>\\n                </div>\\n                <div class=\\\"row mt-5 ml-5 mr-5 mb-5\\\">\\n                    <div class=\\\"col-6\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn buttonColor text-light\\\"\\n                            [disabled]=\\\"!loginForm.valid\\\">Login</button>\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                        <div>\\n                            New Here? <a class=\\\"text-primary \\\" (click)=\\\"toSignup()\\\">Signup</a>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"row pb-5 px-0 py-0 mx-0\\\">\\n    <div class=\\\"col-xs-11 mt-5 ml-5 mr-5 mb-5 mx-auto\\\">\\n\\n        <div class=\\\"card mt-5 shadow\\\" *ngIf=\\\"!newUserAdded\\\">\\n\\n            <div class=\\\"alert-success col-12 px-auto py-3\\\" *ngIf=\\\"userAdded\\\">\\n                School added Sucessfully!!\\n            </div>\\n            <div class=\\\"alert-success col-12 px-auto py-3\\\" *ngIf=\\\"mentorAdded\\\">\\n                Student added Sucessfully!!\\n            </div>\\n\\n            <div class=\\\"alert-danger col-12 px-auto py-5\\\" *ngIf=\\\"signupErrorMessage\\\">\\n                UserName already exists!!\\n            </div>\\n        </div>\\n\\n\\n        <div class=\\\"card mt-5 shadow\\\" *ngIf=\\\"newUserAdded\\\">\\n            <h1 *ngIf=\\\"!userType\\\" class=\\\"mx-auto px-3 py-3 mx-1 mt-1\\\">Student Signup</h1>\\n            <h1 *ngIf=\\\"userType\\\" class=\\\"mx-auto px-3 py-3 mx-1 mt-1\\\">School Signup</h1>\\n\\n\\n            <div class=\\\"row mt-1 ml-5 mr-5\\\">\\n                <div>\\n                    <p *ngIf=\\\"!userType\\\">Are you School... ?<a class=\\\"text-primary\\\" (click)=\\\"userSignUp()\\\">Click\\n                            Here</a></p>\\n                    <p *ngIf=\\\"userType\\\">Are you a Student... ?<a class=\\\"text-primary\\\" (click)=\\\"userSignUp()\\\">Click Here</a>\\n                    </p>\\n\\n                </div>\\n            </div>\\n\\n            <form [formGroup]=\\\"signUpForm\\\" (submit)=\\\"addUser(signUpForm.value)\\\">\\n                <div class=\\\"row mt-1 ml-5 mr-5\\\">\\n\\n                    <div class=\\\"col-12 \\\">\\n                        <label for=\\\"username\\\">User Email</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your email\\\"\\n                            formControlName=\\\"username\\\" id=\\\"username\\\"\\n                            [class.is-invalid]=\\\"username.invalid && username.touched\\\">\\n                        <div *ngIf=\\\"username.errors\\\">\\n                            <small class=\\\"text text-danger\\\" *ngIf=\\\"username.errors.required && username.touched\\\">User\\n                                Email Id is required</small>\\n                        </div>\\n                        <div class=\\\"validation-error text-danger\\\"\\n                            *ngIf=\\\"signUpForm.get('username').touched && signUpForm.get('username').hasError('pattern')\\\">\\n                            Email Format should be followed\\n                        </div>\\n\\n                    </div>\\n\\n                </div>\\n                <div *ngIf=\\\"!userType\\\" class=\\\"row ml-5 mr-5\\\">\\n                    <div class=\\\"col-md-6 col-xs-12 mt-1\\\">\\n                        <label for=\\\"firstname\\\">First Name</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter First Name\\\"\\n                            formControlName=\\\"firstname\\\" id=\\\"firstname\\\"\\n                            [class.is-invalid]=\\\"firstname.invalid && firstname.touched\\\" >\\n                        <div *ngIf=\\\"firstname.errors\\\">\\n                            <small class=\\\"text text-danger\\\"\\n                                *ngIf=\\\"firstname.errors.required && firstname.touched\\\">Firstname is required</small>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-6 col-xs-12  mt-1\\\">\\n                        <label for=\\\"lastname\\\">Last Name</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Last Name\\\" formControlName=\\\"lastname\\\"\\n                            id=\\\"lastname\\\" [class.is-invalid]=\\\"lastname.invalid && lastname.touched\\\" >\\n                        <div *ngIf=\\\"lastname.errors\\\">\\n                            <small class=\\\"text text-danger\\\"\\n                                *ngIf=\\\"lastname.errors.required && lastname.touched\\\">Lastname is required</small>\\n                            </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row ml-5 mr-5\\\">\\n                    <div class=\\\"col-md-6 col-xs-12 mt-1\\\">\\n                        <label for=\\\"password\\\">Password</label>\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Password\\\"\\n                            formControlName=\\\"password\\\" id=\\\"password\\\"\\n                            [class.is-invalid]=\\\"password.invalid && password.touched\\\">\\n                        <div *ngIf=\\\"password.errors\\\">\\n                            <small class=\\\"text text-danger\\\"\\n                                *ngIf=\\\"password.errors.required && password.touched\\\">Password is required</small>\\n                            <small class=\\\"text text-danger\\\" *ngIf=\\\"password.errors.maxlength\\\">Password too long</small>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"col-md-6 col-xs-12 mt-1\\\">\\n                        <label for=\\\"confirmPassword\\\">Confirm Password</label>\\n                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Password\\\"\\n                            formControlName=\\\"confirmPassword\\\" id=\\\"confirmPassword\\\"\\n                            [class.is-invalid]=\\\"confirmPassword.invalid && confirmPassword.touched\\\">\\n                        <div class=\\\"text-danger\\\"\\n                            *ngIf=\\\"confirmPassword.invalid && confirmPassword.errors.required && confirmPassword.touched\\\">\\n                            Confirm the Password</div>\\n                        <div class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('confirmPassword').hasError('nomatch')\\\">Password\\n                            and Confirm Password do not match</div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"userType\\\" class=\\\"row ml-5 mr-5\\\">\\n                    <div class=\\\"col-lg-12 mt-1\\\">\\n                        <label for=\\\"schoolname\\\">School Name</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"schoolname\\\" formControlName=\\\"schoolname\\\" placeholder=\\\"Enter school name\\\"\\n                        [class.is-invalid]=\\\"schoolname.invalid && schoolname.touched\\\">\\n                        <div *ngIf=\\\"firstname.errors\\\">\\n                            <small class=\\\"text text-danger\\\" *ngIf=\\\"schoolname.invalid && schoolname.errors.required && schoolname.touched\\\">\\n                                School name required</small>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row mt-5 ml-5 mr-5 mb-5\\\">\\n                    <div class=\\\"col-12\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn buttonColor text-light\\\"\\n                            [disabled]=\\\"!signUpForm.valid\\\">Signup</button>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n\\n\\n    </div>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n\\n  <h5 class=\\\" my-5\\\">Quizs\\n    <button *ngIf=\\\"isSchool\\\" type=\\\"button\\\" class=\\\"btn float-right\\\" style=\\\"background-color: #1100ff\\\" id=\\\"white\\\"\\n      (click)=\\\"creatQuiz()\\\">\\n      <i class=\\\"material-icons other_icon\\\"> create </i> <span> Create quiz</span>\\n    </button> </h5>\\n</div>\\n<div class=\\\"alert-danger container\\\" *ngIf=\\\"!loggedIn\\\">Login before Attempting quiz</div>\\n<div class=\\\"container card mt-5\\\" *ngFor=\\\"let quiz of quizlist\\\">\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"card-text mx-auto mr-5\\\">\\n          {{quiz.quizName}}\\n          <button *ngIf=\\\"!isSchool\\\" type=\\\"button\\\" class=\\\"btn  float-right\\\" style=\\\"background-color: #1100ff\\\" id=\\\"white\\\"\\n            (click)=\\\"attemptquizbyid(quiz.id)\\\">\\n            <i class=\\\"material-icons other_icon\\\"> launch </i> <span> Attempt quiz</span>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { UserComponent } from './user/user.component';\nimport { CreatequizComponent } from './createquiz/createquiz.component';\nimport { AttemptquizComponent } from './attemptquiz/attemptquiz.component';\n\n\nconst routes: Routes = [\n  {path:\"login\",component:LoginComponent},\n  {path:\"signup\",component:SignupComponent}, \n  {path:'user',component:UserComponent},\n  {path:'create',component:CreatequizComponent},\n  {path:'attempt',component:AttemptquizComponent},\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \".material-icons.md-36 {\\r\\n\\tfont-size: 35px;\\r\\n\\tline-height: 1.5;\\r\\n\\tvertical-align: middle;\\r\\n}\\r\\n\\r\\n.material-icons.other_icon {\\r\\n\\tline-height: 1.75;\\r\\n\\tvertical-align: middle;\\r\\n}\\r\\n\\r\\n.navbar_top {\\r\\n\\t/* background-image:linear-gradient(to right, #6054a5,#362e63,#0b0531 ); */\\r\\n\\tbackground-color: blue;\\r\\n\\theight: 55px;\\r\\n\\t\\t\\t\\r\\n\\t\\r\\n}\\r\\n\\r\\n.navbar_bottom { \\r\\n\\tbackground-color: blue;\\r\\n\\tposition: absolute;\\r\\n\\tfont-size:20px;\\r\\n\\theight: 55px;\\r\\n\\twidth: 100%;\\r\\n\\tbottom: 0;\\r\\n}\\r\\n\\r\\na:hover { \\r\\n    text-decoration: none; \\r\\n} \\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxlQUFlO0NBQ2YsZ0JBQWdCO0NBQ2hCLHNCQUFzQjtBQUN2Qjs7QUFFQTtDQUNDLGlCQUFpQjtDQUNqQixzQkFBc0I7QUFDdkI7O0FBRUE7Q0FDQywwRUFBMEU7Q0FDMUUsc0JBQXNCO0NBQ3RCLFlBQVk7OztBQUdiOztBQUVBO0NBQ0Msc0JBQXNCO0NBQ3RCLGtCQUFrQjtDQUNsQixjQUFjO0NBQ2QsWUFBWTtDQUNaLFdBQVc7Q0FDWCxTQUFTO0FBQ1Y7O0FBR0E7SUFDSSxxQkFBcUI7QUFDekIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXRlcmlhbC1pY29ucy5tZC0zNiB7XHJcblx0Zm9udC1zaXplOiAzNXB4O1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjU7XHJcblx0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuLm1hdGVyaWFsLWljb25zLm90aGVyX2ljb24ge1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjc1O1xyXG5cdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxuXHJcbi5uYXZiYXJfdG9wIHtcclxuXHQvKiBiYWNrZ3JvdW5kLWltYWdlOmxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzYwNTRhNSwjMzYyZTYzLCMwYjA1MzEgKTsgKi9cclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiBibHVlO1xyXG5cdGhlaWdodDogNTVweDtcclxuXHRcdFx0XHJcblx0XHJcbn1cclxuXHJcbi5uYXZiYXJfYm90dG9tIHsgXHJcblx0YmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0Zm9udC1zaXplOjIwcHg7XHJcblx0aGVpZ2h0OiA1NXB4O1xyXG5cdHdpZHRoOiAxMDAlO1xyXG5cdGJvdHRvbTogMDtcclxufVxyXG5cclxuIFxyXG5hOmhvdmVyIHsgXHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IFxyXG59IFxyXG4iXX0= */\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AnthenticationService } from './services/anthentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'quiz';\n  constructor(private authService: AnthenticationService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.router.navigate(['user'])\n  }\n  loggedIn() {\n    if (this.authService.isLoggedIn == true)\n      return true;\n    else\n      return false;\n\n  }\n  logout() {\n    this.authService.accessToken = null;\n    this.authService.loggedIn = false;\n  }\n  quiz(){\n   // alert(\"kjhgf\")\n    this.router.navigate(['user'])\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { UserComponent } from './user/user.component';\nimport { CreatequizComponent } from './createquiz/createquiz.component';\nimport { AttemptquizComponent } from './attemptquiz/attemptquiz.component';\nimport { CountdownModule } from 'ngx-countdown';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    UserComponent,\n    CreatequizComponent,\n    AttemptquizComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CountdownModule\n   \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \".material-icons.other_icon {\\r\\n\\tline-height: 1.75;\\r\\n\\tvertical-align: middle;\\r\\n}\\r\\n\\r\\n#white\\r\\n{\\r\\n\\tcolor: white;\\r\\n}\\r\\n\\r\\n#grey-text\\r\\n{\\r\\n\\tcolor: #a6a6a6;\\t\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXR0ZW1wdHF1aXovYXR0ZW1wdHF1aXouY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGlCQUFpQjtDQUNqQixzQkFBc0I7QUFDdkI7O0FBRUE7O0NBRUMsWUFBWTtBQUNiOztBQUNBOztDQUVDLGNBQWM7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2F0dGVtcHRxdWl6L2F0dGVtcHRxdWl6LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0ZXJpYWwtaWNvbnMub3RoZXJfaWNvbiB7XHJcblx0bGluZS1oZWlnaHQ6IDEuNzU7XHJcblx0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuI3doaXRlXHJcbntcclxuXHRjb2xvcjogd2hpdGU7XHJcbn1cclxuI2dyZXktdGV4dFxyXG57XHJcblx0Y29sb3I6ICNhNmE2YTY7XHRcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { QuizService } from '../services/quiz.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AnthenticationService } from '../services/anthentication.service';\n\n@Component({\n  selector: 'app-attemptquiz',\n  templateUrl: './attemptquiz.component.html',\n  styleUrls: ['./attemptquiz.component.css']\n})\nexport class AttemptquizComponent implements OnInit {\n  questionlist: any;\n\n  constructor(private route:Router,private quiz:QuizService,private formBuilder: FormBuilder) { }\n  quizid:any;\n  options: any = [];\n  totalAnswered: number = 0;\n  rightAnswer: number;\n  completed:boolean=false;\n  timeLeft: number = 1200;\n  interval;\n\n  \n  \n  ngOnInit() {\n    this.interval = setInterval(() => {\n      if(this.timeLeft > 0) {\n        this.timeLeft--;\n      } else {\n        this.timeLeft = 1200;\n      }\n    },1000)\n    this.quizid=this.quiz.getQuizCard()\n    this.quiz.getallQuestions(this.quizid).subscribe((response) => {\n      //alert(JSON.stringify(response))\n      this.questionlist=response;\n    },(error: HttpErrorResponse) => {\n      if (error instanceof Error) {\n      } else {\n      }\n    }\n    );\n  }\n\n  submitTest() {\n\t\tthis.rightAnswer = 0;\n    this.totalAnswered = 0;\n    \n\t\tfor (let i = 0; i < this.questionlist.length; i++) {\n\t\t\tif (\"selected\" in this.questionlist[i] && (this.questionlist[i][\"selected\"] != null)) {\n\t\t\t\tthis.totalAnswered++;\n\t\t\t\tif (this.questionlist[i][\"selected\"] == this.questionlist[i][\"answer\"]) {\n\t\t\t\t\tthis.rightAnswer++;\n\t\t\t\t}\n\t\t\t}\n\n    }\n    this.completed=true;\n  }\n  \n  \n  timesUp(event) {\n     if (event.action == \"done\") { \n    \n    \n      this.rightAnswer = 0;\n      this.totalAnswered = 0;\n      \n      for (let i = 0; i < this.questionlist.length; i++) {\n        if (\"selected\" in this.questionlist[i] && (this.questionlist[i][\"selected\"] != null)) {\n          this.totalAnswered++;\n          if (this.questionlist[i][\"selected\"] == this.questionlist[i][\"answer\"]) {\n            this.rightAnswer++;\n          }\n        }\n  \n      }\n      this.completed=true;\n   } \n  }\n  }\n\n\n","export default \".buttonColor{\\r\\n    background-color: blue;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3JlYXRlcXVpei9jcmVhdGVxdWl6LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7QUFDMUIiLCJmaWxlIjoic3JjL2FwcC9jcmVhdGVxdWl6L2NyZWF0ZXF1aXouY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idXR0b25Db2xvcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { QuizService } from '../services/quiz.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-createquiz',\n  templateUrl: './createquiz.component.html',\n  styleUrls: ['./createquiz.component.css']\n})\nexport class CreatequizComponent implements OnInit {\n  createQuizForm:FormGroup;\n  newQuizAdded:boolean=false;\n  createErrorMessage:any;\n  arr: FormArray;\n  \n  \n  constructor(private formBuilder: FormBuilder,private _quizservice:QuizService) { }\n\n  createItem() {\n    return this.formBuilder.group({\n      question:['',\n      [Validators.required]],\n      a:['',\n      [Validators.required]],\n      b:['',\n      [Validators.required]],\n      c:['',\n      [Validators.required]],\n      d:['',\n      [Validators.required]],\n      answer:['',[Validators.required]]\n    \n    })\n  }\n\n  get quizname() {\n    return this.createQuizForm.get('quizname');\n  }\n\n  get question() {\n    return this.createQuizForm.get('question');\n  }\n\n  get option1() {\n    return this.createQuizForm.get('option1');\n  }\n  get option2() {\n    return this.createQuizForm.get('option2');\n  }\n  get option3() {\n    return this.createQuizForm.get('option3');\n  }\n  get option4() {\n    return this.createQuizForm.get('option4');\n  }\n  get answer() {\n    return this.createQuizForm.get('answer');\n  }\n\n\n  ngOnInit() {\n      this.createQuizForm = this.formBuilder.group({\n      quizname:['',\n      [Validators.required]],\n      arr: this.formBuilder.array([this.createItem()])\n    })\n  }\n\n\n  addItem() {\n    this.arr = this.createQuizForm.get('arr') as FormArray;\n    this.arr.push(this.createItem());\n  }\n\n  createQuiz(createQuizForm){\n    let Quiz:any={\n      \"id\":0,\n      \"quizName\":createQuizForm.quizname,\n      \"questionsList\":createQuizForm.arr\n    }\n    this._quizservice.createQuiz(Quiz).subscribe((response) => {\n        //alert(response)\n      this.newQuizAdded = true;\n      this.createErrorMessage = null;\n      \n    }, (error: HttpErrorResponse) => {\n      this.createErrorMessage = error.message;\n      if (error instanceof Error) {\n      } else {\n      }\n    })\n  }\n  }\n\n","export default \"\\r\\n.buttonColor{\\r\\n    background-color: blue;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxzQkFBc0I7QUFDMUIiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5idXR0b25Db2xvcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AnthenticationService } from '../services/anthentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup\n  changeType: boolean;\n  isType: boolean = true;\n  cate = [\"Login as..\", \"School\", \"Student\"];\n\n  constructor(private formBuild: FormBuilder, private authService: AnthenticationService, private router: Router) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuild.group({\n      username: ['', [\n        Validators.required\n      ]],\n      password: ['', [\n        Validators.required\n      ]],\n      userType: [this.cate[0], [\n        Validators.required\n      ]]\n    })\n  }\n  get username() {\n    return this.loginForm.get('username');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n  toSignup() {\n    this.router.navigate(['signup'])\n  }\n  get userType() {\n    return this.loginForm.get('userType');\n  }\n\n  changeUserType($event) {\n    if ($event.target.selectedIndex != 0) {\n      this.changeType = false;\n      this.isType = false;\n    }\n    else {\n      this.changeType = true;\n      this.isType = true;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnthenticationService {\n\n  isSchool:boolean=false;\n  loggedInUser = { loggedOut: true };\n  isLoggedIn: boolean;\n  validCredentials: boolean = false;\n  accessToken: string;\n  redirectUrl = '/';\n  loggedIn: boolean = false;\n  name: string;\n  authUrl = environment.authUrl;\n  private token: string;\n  error: any;\n  suffix: string;\n  username: any;\n  isLoggedInValid: boolean = false;\n  LoggedIn: any;\n\n\n  constructor(private router: Router, private httpClient: HttpClient) { }\n\n  authenticateUser(user) {\n    this.isLoggedIn = true;\n    \n    if (user.userType == \"School\") {\n\n      this.suffix = \"s\"\n    }\n    else if (user.userType == \"Student\") {\n      this.suffix = \"u\"\n    }\n    this.authenticateSpring(user.username, user.password).subscribe((data) => {\n      this.username = user.username;\n      this.loggedInUser = user;\n      this.validCredentials = true;\n      this.loggedIn = true;\n      this.setToken(data.token);\n      this.name = user.username;\n     \n\n      if (data.role == \"ROLE_s\") {\n        this.isSchool=true;\n        this.router.navigate(['user']);\n      }\n      else if (data.role == \"ROLE_u\") {\n        this.isSchool=false;\n        this.router.navigate(['user']);\n      }\n      else {\n        this.router.navigate(['login']);\n      }\n    },\n      (error) => {\n        this.validCredentials = false;\n        this.isLoggedInValid = true;\n        this.error = error.error.message;\n        if (error.error.errors != null) {\n          this.error = error.error.errors[0];\n\n        }\n      }\n    )\n  }\n\n  public setToken(token: string) {\n    this.token = token;\n  }\n  public getToken() {\n    return this.token;\n  }\n\n\n\n\n  authenticateSpring(user: string, password: string): Observable<any> {\n    var newUser = user + this.suffix\n    let credentials = btoa(newUser + ':' + password);\n    let headers = new HttpHeaders();\n    \n    headers = headers.set('Authorization', 'Basic ' + credentials)\n    return this.httpClient.get(this.authUrl, { headers })\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AnthenticationService } from './anthentication.service';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizService {\n  \n  \n  constructor(private _httpClient: HttpClient, private _authService: AnthenticationService) { }\n  allquiz=environment.allquiz\n  selectedCard: any;\n  getallQuizs() {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this._authService.getToken());\n    //alert(JSON.stringify(headers));\n    return this._httpClient.get<any>(this.allquiz + \"/allquiz\" , { headers })\n  }\n\n  createQuiz(quiz: any) {\n    //alert(JSON.stringify(quiz))\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this._authService.getToken());\n   // alert(JSON.stringify(headers));\n    return this._httpClient.post<any>(this.allquiz + \"/create\" , quiz, { headers })\n  }\n\n\n  getallQuestions(id) {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this._authService.getToken());\n   // alert(JSON.stringify(headers));\n    return this._httpClient.get<any>(this.allquiz + \"/questions/\"+id , { headers })\n  }\n  \n  public setQuizCard(id: any) {\n    //alert(id)\n    this.selectedCard = id;\n  }\n  public getQuizCard(){\n    return this.selectedCard\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AnthenticationService } from './anthentication.service';\nimport { Student } from '../interfaces/student';\nimport { environment } from 'src/environments/environment';\nimport { School } from '../interfaces/school';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  addschoolUrl=environment.add;\n  constructor(private _httpClient: HttpClient, private _authService: AnthenticationService) { }\n  private subject = new Subject<any>();\n  adduserUrl = environment.add;\n  studentSignUp(userSignUpData: Student) {\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this._authService.getToken());\n    return this._httpClient.post<Student>(this.adduserUrl + '/addstudent', userSignUpData,{ headers });\n  }\n\n  schoolSignUp(schoolSignUpData: School) {\n    //alert(JSON.stringify(schoolSignUpData));\n    let headers = new HttpHeaders();\n    headers = headers.set('Authorization', 'Bearer ' + this._authService.getToken());\n    return this._httpClient.post<School>(this.addschoolUrl + '/addschool', schoolSignUpData,{ headers });\n\n  }\n}\n","export default \".buttonColor{\\r\\n    background-color: blue;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksc0JBQXNCO0FBQzFCIiwiZmlsZSI6InNyYy9hcHAvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ1dHRvbkNvbG9ye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AnthenticationService } from '../services/anthentication.service';\nimport { School } from '../interfaces/school';\nimport { Student } from '../interfaces/student';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  signUpForm: FormGroup;\n  userType: boolean = false;\n  userAdded: boolean = false;\n  signupErrorMessage: any;\n  mentorAdded: boolean = false;\n  newUserAdded: boolean = true;\n\n  constructor(private formBuilder: FormBuilder, private _authService: AnthenticationService, private _userService: UserService) { }\n\n  ngOnInit() {\n    \n    this.signUpForm = this.formBuilder.group({\n      username: ['', [\n        Validators.required,\n        Validators.pattern(\"[^ @]*@[^ @]*\")\n      ]],\n      firstname: ['', [\n        \n      ]],\n      lastname: ['', [\n        \n      ]],\n      password: ['', [\n        Validators.required,\n        Validators.maxLength(50)\n      ]],\n      confirmPassword: ['', [\n        Validators.required,\n        this.matchConfirmPassword.bind(this)\n      ]],\n      schoolname: ['', [\n        \n\n      ]]\n    })\n  }\n\n  get username() {\n    return this.signUpForm.get('username');\n  }\n  get firstname() {\n    return this.signUpForm.get('firstname');\n  }\n  get lastname() {\n    return this.signUpForm.get('lastname');\n  }\n  get password() {\n    return this.signUpForm.get('password');\n  }\n  get confirmPassword() {\n    return this.signUpForm.get('confirmPassword');\n  }\n  get schoolname(){\n    return this.signUpForm.get('schoolname');\n  }\n  matchConfirmPassword(formControl: FormControl): { [s: string]: boolean } {\n    if (this.signUpForm) {\n      if (formControl.value && formControl.value.length > 0 && formControl.value !== this.signUpForm.get('password').value) {\n        return { 'nomatch': true };\n      }\n    }\n    return null;\n  }\n\n  userSignUp() {\n    this.userType = !this.userType;\n    \n  }\n\n  addUser(signUpForm) {\n\n    if (this.userType) {\n      let school: School =\n      {\n        \"id\": 0,\n        \"userName\": signUpForm.username,\n        \"password\": signUpForm.password,\n        \"schoolName\":signUpForm.schoolname\n      }\n\n      this._userService.schoolSignUp(school).subscribe((response) => {\n        \n        this.userAdded = true;\n        this.signupErrorMessage = null;\n        this.newUserAdded = false;\n      }, (error: HttpErrorResponse) => {\n        this.signupErrorMessage = error.message;\n        if (error instanceof Error) {\n        } else {\n        }\n      })\n    }\n    else {\n      let student: Student =\n      {\n        \"id\": 0,\n        \"userName\": signUpForm.username,\n        \"firstName\": signUpForm.firstname,\n        \"lastName\": signUpForm.lastname,\n        \"password\": signUpForm.password,\n      }\n\n      this._userService.studentSignUp(student).subscribe((response) => {\n        this.mentorAdded = true;\n        this.newUserAdded = false;\n        this.signupErrorMessage = null;\n      }, (error: HttpErrorResponse) => {\n        this.signupErrorMessage = error.message;\n        if (error instanceof Error) {\n        } else {\n        }\n      })\n\n    }\n  }\n}\n","export default \".material-icons.other_icon {\\r\\n\\tline-height: 1.75;\\r\\n\\tvertical-align: middle;\\r\\n}\\r\\n\\r\\n#white\\r\\n{\\r\\n\\tcolor: white;\\r\\n}\\r\\n\\r\\n#grey-text\\r\\n{\\r\\n\\tcolor: #a6a6a6;\\t\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxpQkFBaUI7Q0FDakIsc0JBQXNCO0FBQ3ZCOztBQUVBOztDQUVDLFlBQVk7QUFDYjs7QUFDQTs7Q0FFQyxjQUFjO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC91c2VyL3VzZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXRlcmlhbC1pY29ucy5vdGhlcl9pY29uIHtcclxuXHRsaW5lLWhlaWdodDogMS43NTtcclxuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59XHJcblxyXG4jd2hpdGVcclxue1xyXG5cdGNvbG9yOiB3aGl0ZTtcclxufVxyXG4jZ3JleS10ZXh0XHJcbntcclxuXHRjb2xvcjogI2E2YTZhNjtcdFxyXG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { QuizService } from '../services/quiz.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AnthenticationService } from '../services/anthentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  loggedIn:boolean=true;\n  quizlist: any;\n  isSchool: boolean;\n  constructor(private quiz: QuizService, private auth: AnthenticationService, private router: Router) { }\n\n  ngOnInit() {\n    this.isSchool = this.auth.isSchool;\n    this.quiz.getallQuizs().subscribe((response) => {\n      //alert(JSON.stringify(response))\n      this.quizlist = response;\n    }, (error: HttpErrorResponse) => {\n      if (error instanceof Error) {\n      } else {\n      }\n    }\n    );\n  }\n  creatQuiz() {\n    this.router.navigate(['create'])\n  }\n  attemptquizbyid(id) {\n    if (this.auth.isLoggedIn) {\n      this.quiz.setQuizCard(id);\n      this.router.navigate(['attempt'])\n    }\n    else{\n      this.loggedIn=false\n      this.router.navigate(['user'])\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  authUrl:'http://localhost:9091/authenticate',\n  add:'http://localhost:9091/signup',\n  allquiz:'http://localhost:9091/quiz'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}